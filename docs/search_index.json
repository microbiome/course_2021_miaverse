[["community-typing.html", "8 Community typing 8.1 Dirichlet-Multinomial Mixture Model 8.2 PCoA for ASV-level data with Bray-Curtis; with DMM clusters shown with colors", " 8 Community typing 8.1 Dirichlet-Multinomial Mixture Model This section focus on DMM analysis. One technique that allows to search for groups of samples that are similar to each other is the Dirichlet-Multinomial Mixture Model. In DMM, we first determine the number of clusters (k) that best fit the data (model evidence) using Laplace approximation. After fitting the model with k clusters, we obtain for each sample k probabilities that reflect the probability that a sample belongs to the given cluster. Letâ€™s cluster the data with DMM clustering. # Runs model and calculates the most likely number of clusters from 1 to 7. # For this small data, takes about 10 seconds. For larger data, can take much longer # because this demands lots of resources. tse_dmn &lt;- runDMN(tse, name = &quot;DMN&quot;, k = 1:7) # It is stored in metadata tse_dmn ## class: TreeSummarizedExperiment ## dim: 151 27 ## metadata(1): DMN ## assays(3): counts relabundance clr ## rownames(151): 1726470 1726471 ... 17264756 17264757 ## rowData names(6): Kingdom Phylum ... Family Genus ## colnames(27): A110 A12 ... A35 A38 ## colData names(6): patient_status cohort ... Shannon_index ## Faith_diversity_index ## reducedDimNames(0): ## mainExpName: NULL ## altExpNames(0): ## rowLinks: a LinkDataFrame (151 rows) ## rowTree: 1 phylo tree(s) (151 leaves) ## colLinks: NULL ## colTree: NULL Return information on metadata that the object contains. names(metadata(tse_dmn)) ## [1] &quot;DMN&quot; This returns a list of DMN objects for a closer investigation. getDMN(tse_dmn) ## [[1]] ## class: DMN ## k: 1 ## samples x taxa: 27 x 151 ## Laplace: 12049.73 BIC: 12271.38 AIC: 12173.55 ## ## [[2]] ## class: DMN ## k: 2 ## samples x taxa: 27 x 151 ## Laplace: 11441 BIC: 12161.29 AIC: 11964.97 ## ## [[3]] ## class: DMN ## k: 3 ## samples x taxa: 27 x 151 ## Laplace: 11059.71 BIC: 12266.31 AIC: 11971.51 ## ## [[4]] ## class: DMN ## k: 4 ## samples x taxa: 27 x 151 ## Laplace: 11417.29 BIC: 13047.39 AIC: 12654.11 ## ## [[5]] ## class: DMN ## k: 5 ## samples x taxa: 27 x 151 ## Laplace: 11217.48 BIC: 13305.58 AIC: 12813.8 ## ## [[6]] ## class: DMN ## k: 6 ## samples x taxa: 27 x 151 ## Laplace: 11201.93 BIC: 13718.9 AIC: 13128.65 ## ## [[7]] ## class: DMN ## k: 7 ## samples x taxa: 27 x 151 ## Laplace: 11427.94 BIC: 14172.79 AIC: 13484.06 Show Laplace approximation (model evidence) for each model of the k models. plotDMNFit(tse_dmn, type = &quot;laplace&quot;) Return the model that has the best fit. getBestDMNFit(tse_dmn, type = &quot;laplace&quot;) ## class: DMN ## k: 3 ## samples x taxa: 27 x 151 ## Laplace: 11059.71 BIC: 12266.31 AIC: 11971.51 8.2 PCoA for ASV-level data with Bray-Curtis; with DMM clusters shown with colors Group samples and return DMNGroup object that contains a summary. Patient status is used for grouping. dmn_group &lt;- calculateDMNgroup(tse_dmn, variable = &quot;patient_status&quot;, exprs_values = &quot;counts&quot;, k = 3) dmn_group ## class: DMNGroup ## summary: ## k samples taxa NLE LogDet Laplace BIC AIC ## ADHD 3 13 151 6330.860 -52.57298 5886.457 6914.386 6785.860 ## Control 3 14 151 6647.269 -148.36760 6154.968 7247.655 7102.269 Mixture weights (rough measure of the cluster size). DirichletMultinomial::mixturewt(getBestDMNFit(tse_dmn)) ## pi theta ## 1 0.4814815 31.27721 ## 2 0.2962963 47.34333 ## 3 0.2222222 92.27259 Samples-cluster assignment probabilities / how probable it is that sample belongs to each cluster head(DirichletMultinomial::mixture(getBestDMNFit(tse_dmn))) ## [,1] [,2] [,3] ## A110 1.000000e+00 1.244279e-144 7.516719e-205 ## A12 9.681110e-117 6.093975e-93 1.000000e+00 ## A15 1.000000e+00 9.439625e-119 3.385825e-234 ## A19 5.280157e-112 1.809847e-107 1.000000e+00 ## A21 2.110437e-93 4.700469e-96 1.000000e+00 ## A23 1.000000e+00 8.770358e-111 1.921228e-161 Contribution of each taxa to each component head(DirichletMultinomial::fitted(getBestDMNFit(tse_dmn))) ## [,1] [,2] [,3] ## 1726470 6.351919489 2.89870924 20.1886560 ## 1726471 5.287568743 0.00204696 0.1532279 ## 17264731 0.001247993 9.14420251 2.0112223 ## 17264726 0.140482257 1.36348303 7.5893681 ## 1726472 2.104135319 3.52317809 2.6656586 ## 17264724 0.072368110 0.00204696 9.8544756 Get the assignment probabilities prob &lt;- DirichletMultinomial::mixture(getBestDMNFit(tse_dmn)) # Add column names colnames(prob) &lt;- c(&quot;comp1&quot;, &quot;comp2&quot;, &quot;comp3&quot;) # For each row, finds column that has the highest value. Then extract the column # names of highest values. vec &lt;- colnames(prob)[max.col(prob,ties.method = &quot;first&quot;)] # Creates a data frame that contains principal coordinates and DMM information euclidean_dmm_pcoa_df &lt;- cbind(euclidean_pcoa_df, dmm_component = vec) # Creates a plot euclidean_dmm_plot &lt;- ggplot(data = euclidean_dmm_pcoa_df, aes(x=pcoa1, y=pcoa2, color = dmm_component)) + geom_point() + labs(x = &quot;Coordinate 1&quot;, y = &quot;Coordinate 2&quot;, title = &quot;PCoA with Aitchison distances&quot;) + theme(title = element_text(size = 12)) # makes titles smaller euclidean_dmm_plot "]]
